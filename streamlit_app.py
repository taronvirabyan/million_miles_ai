"""
Million Miles AI Sales Assistant - Production Version
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Streamlit Community Cloud
"""

import streamlit as st
import json
import os
from datetime import datetime
import sys
import uuid
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    pass

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º AI –¥–≤–∏–∂–æ–∫ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—É—Ç–µ–º
try:
    from ai_engine_improved import ImprovedLuxuryCarAISalesAssistant
except ImportError:
    # Fallback - –ø–æ–ø—Ä–æ–±—É–µ–º –∏–∑ –ø–∞–ø–∫–∏ bot
    sys.path.insert(0, str(current_dir / "bot"))
    from ai_engine_improved import ImprovedLuxuryCarAISalesAssistant

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Million Miles AI Sales Assistant",
    page_icon="üöó",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ç–∏–ª–∏ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
st.markdown("""
<style>
    @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Inter:wght@300;400;500;600&display=swap');
    
    /* === –û–°–ù–û–í–ù–´–ï –°–¢–ò–õ–ò === */
    .stApp {
        background: linear-gradient(145deg, #0a0a0a 0%, #1a1a1a 50%, #0d0d0d 100%);
        background-attachment: fixed;
    }
    
    .stApp::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
            radial-gradient(circle at 20% 80%, rgba(220, 20, 60, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(255, 215, 0, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.01) 0%, transparent 50%);
        pointer-events: none;
        z-index: -1;
    }
    
    /* === –ü–†–ï–ú–ò–ê–õ–¨–ù–´–ô –ó–ê–ì–û–õ–û–í–û–ö === */
    .luxury-header {
        background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 50%, #1a1a1a 100%);
        border: 2px solid transparent;
        background-clip: padding-box;
        position: relative;
        padding: 3rem 2rem;
        border-radius: 20px;
        margin-bottom: 2rem;
        text-align: center;
        box-shadow: 
            0 20px 60px rgba(0, 0, 0, 0.7),
            inset 0 1px 0 rgba(255, 255, 255, 0.1),
            0 0 0 1px rgba(220, 20, 60, 0.3);
        overflow: hidden;
    }
    
    .luxury-header::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, #dc143c, #ffd700, #dc143c, #ffd700);
        background-size: 400% 400%;
        animation: luxury-border 4s ease-in-out infinite;
        border-radius: 22px;
        z-index: -1;
    }
    
    @keyframes luxury-border {
        0%, 100% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
    }
    
    .luxury-header h1 {
        font-family: 'Playfair Display', serif !important;
        color: #ffd700 !important;
        font-size: 3.5rem !important;
        font-weight: 700 !important;
        margin: 0 !important;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
        letter-spacing: 2px;
    }
    
    .luxury-header .subtitle {
        font-family: 'Inter', sans-serif !important;
        color: #e8e8e8 !important;
        font-size: 1.2rem !important;
        margin-top: 1rem !important;
        font-weight: 300 !important;
        letter-spacing: 1px;
        text-transform: uppercase;
    }
    
    .luxury-header .luxury-icon {
        font-size: 4rem;
        background: linear-gradient(45deg, #dc143c, #ffd700);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 1rem;
        filter: drop-shadow(0 0 10px rgba(220, 20, 60, 0.3));
    }
    
    /* === –ü–†–ï–ú–ò–ê–õ–¨–ù–´–ï –ö–ù–û–ü–ö–ò === */
    .stButton > button {
        background: linear-gradient(135deg, #2a2a2a 0%, #3d3d3d 100%) !important;
        color: #ffd700 !important;
        border: 2px solid #dc143c !important;
        border-radius: 30px !important;
        padding: 0.8rem 2.5rem !important;
        font-family: 'Inter', sans-serif !important;
        font-weight: 600 !important;
        font-size: 0.95rem !important;
        text-transform: uppercase !important;
        letter-spacing: 1px !important;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1) !important;
        box-shadow: 
            0 8px 32px rgba(220, 20, 60, 0.2),
            inset 0 1px 0 rgba(255, 255, 255, 0.1) !important;
        position: relative !important;
        overflow: hidden !important;
    }
    
    .stButton > button::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(220, 20, 60, 0.2), transparent);
        transition: left 0.5s;
    }
    
    .stButton > button:hover {
        background: linear-gradient(135deg, #3d3d3d 0%, #4a4a4a 100%) !important;
        border-color: #ffd700 !important;
        transform: translateY(-3px) !important;
        box-shadow: 
            0 15px 45px rgba(220, 20, 60, 0.4),
            inset 0 1px 0 rgba(255, 255, 255, 0.2) !important;
    }
    
    .stButton > button:hover::before {
        left: 100%;
    }
    
    /* === –≠–õ–ò–¢–ù–´–ï –ß–ê–¢ –°–û–û–ë–©–ï–ù–ò–Ø === */
    .stChatMessage {
        background: linear-gradient(135deg, #1e1e1e 0%, #2a2a2a 100%) !important;
        border: 1px solid rgba(220, 20, 60, 0.2) !important;
        border-radius: 20px !important;
        margin-bottom: 1.5rem !important;
        padding: 1.5rem !important;
        box-shadow: 
            0 10px 40px rgba(0, 0, 0, 0.6),
            inset 0 1px 0 rgba(255, 255, 255, 0.05) !important;
        backdrop-filter: blur(10px) !important;
        position: relative !important;
        overflow: hidden !important;
    }
    
    .stChatMessage::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, #dc143c, #ffd700, #dc143c);
        opacity: 0.6;
    }
    
    /* –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
    [data-testid="chat-message-user"] {
        background: linear-gradient(135deg, #2d1810 0%, #3d2418 100%) !important;
        border: 1px solid rgba(255, 215, 0, 0.3) !important;
        margin-left: 10% !important;
    }
    
    [data-testid="chat-message-user"]::before {
        background: linear-gradient(90deg, #ffd700, #dc143c, #ffd700) !important;
    }
    
    /* –°–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ */
    [data-testid="chat-message-assistant"] {
        background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%) !important;
        border: 1px solid rgba(220, 20, 60, 0.2) !important;
        margin-right: 10% !important;
    }
    
    /* –¢–µ–∫—Å—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö */
    .stChatMessage p,
    .stChatMessage div,
    .stChatMessage span,
    .stChatMessage *,
    .stChatMessage strong {
        color: #e8e8e8 !important;
        font-family: 'Inter', sans-serif !important;
        line-height: 1.7 !important;
        font-weight: 400 !important;
    }
    
    .stChatMessage strong {
        color: #ffd700 !important;
        font-weight: 600 !important;
    }
    
    .stChatMessage h1, .stChatMessage h2, .stChatMessage h3 {
        color: #ffd700 !important;
        font-family: 'Playfair Display', serif !important;
    }
    
    /* === –≠–õ–ò–¢–ù–û–ï –ü–û–õ–ï –í–í–û–î–ê === */
    .stChatInput > div {
        background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%) !important;
        border: 2px solid rgba(220, 20, 60, 0.3) !important;
        border-radius: 25px !important;
        box-shadow: 
            0 10px 40px rgba(0, 0, 0, 0.6),
            inset 0 1px 0 rgba(255, 255, 255, 0.05) !important;
        backdrop-filter: blur(15px) !important;
    }
    
    .stChatInput textarea {
        color: #e8e8e8 !important;
        font-family: 'Inter', sans-serif !important;
        background: transparent !important;
        border: none !important;
        font-size: 1rem !important;
    }
    
    .stChatInput textarea::placeholder {
        color: rgba(232, 232, 232, 0.5) !important;
        font-style: italic !important;
    }
    
    /* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ */
    [data-testid="stChatInput"] textarea,
    [data-testid="stChatInput"] input {
        color: #e8e8e8 !important;
        background: transparent !important;
    }
    
    /* –û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ */
    input, textarea {
        color: #e8e8e8 !important;
    }
    
    input:focus, textarea:focus {
        color: #e8e8e8 !important;
    }
    
    /* === –†–û–°–ö–û–®–ù–ê–Ø –ë–û–ö–û–í–ê–Ø –ü–ê–ù–ï–õ–¨ === */
    section[data-testid="stSidebar"] {
        background: linear-gradient(180deg, #0d0d0d 0%, #1a1a1a 50%, #0d0d0d 100%) !important;
        border-right: 2px solid rgba(220, 20, 60, 0.2) !important;
    }
    
    section[data-testid="stSidebar"]::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 2px;
        height: 100%;
        background: linear-gradient(180deg, #dc143c, #ffd700, #dc143c);
        opacity: 0.6;
    }
    
    section[data-testid="stSidebar"] .stMarkdown h2 {
        color: #ffd700 !important;
        font-family: 'Playfair Display', serif !important;
        text-align: center !important;
        text-shadow: 0 0 10px rgba(255, 215, 0, 0.3) !important;
    }
    
    section[data-testid="stSidebar"] .stMarkdown p,
    section[data-testid="stSidebar"] label {
        color: #e8e8e8 !important;
        font-family: 'Inter', sans-serif !important;
        font-weight: 300 !important;
    }
    
    section[data-testid="stSidebar"] .stTextInput input,
    section[data-testid="stSidebar"] .stSelectbox select {
        background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%) !important;
        border: 1px solid rgba(220, 20, 60, 0.3) !important;
        color: #e8e8e8 !important;
        border-radius: 10px !important;
        font-family: 'Inter', sans-serif !important;
    }
    
    /* === –≠–õ–ò–¢–ù–´–ï –ú–ï–¢–†–ò–ö–ò === */
    .luxury-metric-card {
        background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);
        border: 1px solid rgba(220, 20, 60, 0.2);
        padding: 2rem;
        border-radius: 20px;
        text-align: center;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        height: 100%;
        position: relative;
        overflow: hidden;
        box-shadow: 
            0 10px 40px rgba(0, 0, 0, 0.6),
            inset 0 1px 0 rgba(255, 255, 255, 0.05);
    }
    
    .luxury-metric-card::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, #dc143c, #ffd700);
        background-size: 200% 200%;
        animation: luxury-glow 3s ease-in-out infinite;
        border-radius: 22px;
        z-index: -1;
        opacity: 0;
        transition: opacity 0.4s;
    }
    
    .luxury-metric-card:hover::before {
        opacity: 0.3;
    }
    
    @keyframes luxury-glow {
        0%, 100% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
    }
    
    .luxury-metric-card:hover {
        transform: translateY(-8px) scale(1.02);
        border-color: rgba(255, 215, 0, 0.5);
        box-shadow: 
            0 20px 60px rgba(0, 0, 0, 0.8),
            0 0 30px rgba(220, 20, 60, 0.3),
            inset 0 1px 0 rgba(255, 255, 255, 0.1);
    }
    
    .luxury-metric-card .metric-icon {
        font-size: 3rem;
        background: linear-gradient(45deg, #dc143c, #ffd700);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 1rem;
        filter: drop-shadow(0 0 10px rgba(220, 20, 60, 0.3));
    }
    
    .luxury-metric-card h3 {
        color: #ffd700 !important;
        font-family: 'Playfair Display', serif !important;
        font-size: 1.5rem !important;
        margin-bottom: 0.5rem !important;
        font-weight: 700 !important;
    }
    
    .luxury-metric-card p {
        color: #e8e8e8 !important;
        font-family: 'Inter', sans-serif !important;
        margin: 0 !important;
        font-weight: 300 !important;
        font-size: 0.9rem !important;
        line-height: 1.4 !important;
    }
    
    /* === –ü–†–ï–ú–ò–ê–õ–¨–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ === */
    .stAlert {
        background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%) !important;
        border: 1px solid rgba(220, 20, 60, 0.3) !important;
        border-radius: 15px !important;
        color: #e8e8e8 !important;
    }
    
    .stSpinner > div {
        border-color: #dc143c transparent #ffd700 transparent !important;
    }
    
    /* === –†–ê–ó–î–ï–õ–ò–¢–ï–õ–ò === */
    hr {
        margin: 3rem 0 !important;
        border: none !important;
        height: 1px !important;
        background: linear-gradient(90deg, transparent, rgba(220, 20, 60, 0.5), transparent) !important;
    }
    
    /* === –°–ö–†–û–õ–õ–ë–ê–† === */
    ::-webkit-scrollbar {
        width: 8px;
    }
    
    ::-webkit-scrollbar-track {
        background: #1a1a1a;
    }
    
    ::-webkit-scrollbar-thumb {
        background: linear-gradient(180deg, #dc143c, #ffd700);
        border-radius: 4px;
    }
    
    ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(180deg, #ffd700, #dc143c);
    }
    
    /* === –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨ === */
    @media (max-width: 768px) {
        .luxury-header h1 {
            font-size: 2.5rem !important;
        }
        
        .luxury-header {
            padding: 2rem 1rem !important;
        }
        
        [data-testid="chat-message-user"] {
            margin-left: 5% !important;
        }
        
        [data-testid="chat-message-assistant"] {
            margin-right: 5% !important;
        }
    }
</style>
""", unsafe_allow_html=True)

# --- –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –°–ë–†–û–°–ê –°–ï–°–°–ò–ò ---
def reset_chat_session():
    """–û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π ID —Å–µ—Å—Å–∏–∏."""
    st.session_state.messages = []
    st.session_state.session_id = str(uuid.uuid4())
    welcome_message = """## üèÜ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Million Miles

**–Ø –í–∏–∫—Ç–æ—Ä–∏—è** ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞.

### üöó –ù–∞—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è:
**Ferrari** ‚Ä¢ **Bentley** ‚Ä¢ **Rolls-Royce** ‚Ä¢ **Lamborghini** ‚Ä¢ **Porsche** ‚Ä¢ **Mercedes-Maybach** ‚Ä¢ **Aston Martin** ‚Ä¢ **McLaren**

### ‚ú® –ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:
‚Ä¢ **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥–±–æ—Ä** –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
‚Ä¢ **–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è** –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–∏–ª–µ—Ä–æ–≤  
‚Ä¢ **VIP-—Å–µ—Ä–≤–∏—Å** –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö —Å–¥–µ–ª–∫–∏
‚Ä¢ **–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞** –æ—Ç 2 –Ω–µ–¥–µ–ª—å –ø–æ –†–æ—Å—Å–∏–∏

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö, –±—é–¥–∂–µ—Ç–µ –∏ —Å—Ç–∏–ª–µ –∂–∏–∑–Ω–∏ ‚Äî —è –ø–æ–¥–±–µ—Ä—É –∏–¥–µ–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—Å.

---
üíé *–í Million Miles –∫–∞–∂–¥—ã–π –∫–ª–∏–µ–Ω—Ç ‚Äî –æ—Å–æ–±–µ–Ω–Ω—ã–π*"""
    st.session_state.messages.append({"role": "assistant", "content": welcome_message})

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if 'messages' not in st.session_state:
    reset_chat_session()

if 'selected_client' not in st.session_state:
    st.session_state.selected_client = "–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç"
if 'session_id' not in st.session_state:
    st.session_state.session_id = str(uuid.uuid4())

# –°–æ–∑–¥–∞–Ω–∏–µ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –ø–æ–ª—É—á–µ–Ω–∏–µ–º API –∫–ª—é—á–∞
@st.cache_resource
def get_assistant():
    """–°–æ–∑–¥–∞–Ω–∏–µ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º API –∫–ª—é—á–æ–º –∏ –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –ø—É—Ç–µ–π"""
    api_key = None
    
    # 1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º Streamlit secrets (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)
    try:
        api_key = st.secrets["GEMINI_API_KEY"]
        os.environ["GEMINI_API_KEY"] = api_key
        print("‚úÖ API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ Streamlit secrets")
    except (KeyError, AttributeError):
        # 2. Fallback –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        api_key = os.getenv("GEMINI_API_KEY")
        if api_key:
            print("‚úÖ API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        else:
            st.error("""‚ö†Ô∏è **API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!**
            
**–î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:**
- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª `.env` —Å–æ–¥–µ—Ä–∂–∏—Ç: `GEMINI_API_KEY=–≤–∞—à_–∫–ª—é—á`
- –ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ `.streamlit/secrets.toml`

**–î–ª—è Streamlit Cloud:**
- –î–æ–±–∞–≤—å—Ç–µ `GEMINI_API_KEY` –≤ Advanced Settings –ø—Ä–∏ –¥–µ–ø–ª–æ–µ
            """)
            st.stop()
    
    if not api_key or len(api_key.strip()) < 10:
        st.error("‚ö†Ô∏è API –∫–ª—é—á –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–ª–∏ –ø—É—Å—Ç–æ–π")
        st.stop()
    
    # –°–æ–∑–¥–∞–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –ø—É—Ç–µ–π
    return ImprovedLuxuryCarAISalesAssistant(ai_provider="gemini")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
st.markdown("""
<div class="luxury-header">
    <div class="luxury-icon">üèÜ</div>
    <h1>Million Miles</h1>
    <p class="subtitle">–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–æ –ø–æ–∏—Å–∫—É –∏ –¥–æ—Å—Ç–∞–≤–∫–µ —ç–ª–∏—Ç–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π</p>
</div>
""", unsafe_allow_html=True)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.markdown("<h2 style='color: white; text-align: center;'>üë§ –ö–ª–∏–µ–Ω—Ç</h2>", unsafe_allow_html=True)
    st.markdown("---")
    
    assistant = get_assistant()
    client_names = [client["name"] for client in assistant.crm_data.get("clients", [])]
    client_names.insert(0, "–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç")
    
    st.markdown("<p style='color: white; font-weight: bold;'>üìã –ë–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤</p>", unsafe_allow_html=True)
    selected_name = st.selectbox(
        "–í—ã–±–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã",
        client_names,
        index=client_names.index(st.session_state.selected_client),
        on_change=reset_chat_session,
        label_visibility="collapsed"
    )
    
    st.session_state.selected_client = selected_name

    if selected_name != "–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç":
        client = assistant.find_client_by_name(selected_name)
        if client:
            st.info(f"üí∞ –ë—é–¥–∂–µ—Ç: {client.budget_min:,} - {client.budget_max:,} ‚ÇΩ")
            st.info(f"üìä –°—Ç–∞—Ç—É—Å: {client.deal_status}")
    
    if st.button("üóëÔ∏è –ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥", use_container_width=True, on_click=reset_chat_session):
        st.rerun()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
if prompt := st.chat_input("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."):
    st.session_state.messages.append({"role": "user", "content": prompt})
    
    with st.chat_message("user"):
        st.markdown(prompt)
    
    with st.chat_message("assistant"):
        with st.spinner("–î—É–º–∞—é..."):
            assistant = get_assistant()
            response = assistant.generate_response(
                prompt, 
                st.session_state.selected_client,
                chat_history=st.session_state.messages
            )
            st.markdown(response)
    
    st.session_state.messages.append({"role": "assistant", "content": response})

# –§—É—Ç–µ—Ä —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
st.markdown("---")
col1, col2, col3, col4 = st.columns(4)

with col1:
    st.markdown("""
    <div class="luxury-metric-card">
        <div class="metric-icon">üöó</div>
        <h3>9 127</h3>
        <p>–ü—Ä–æ–¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π<br><em>Ferrari ‚Ä¢ Bentley ‚Ä¢ Rolls-Royce</em></p>
    </div>
    """, unsafe_allow_html=True)

with col2:
    st.markdown("""
    <div class="luxury-metric-card">
        <div class="metric-icon">üë®‚Äçüíº</div>
        <h3>19</h3>
        <p>–≠–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ –ø–æ–¥–±–æ—Ä—É<br><em>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã</em></p>
    </div>
    """, unsafe_allow_html=True)

with col3:
    st.markdown("""
    <div class="luxury-metric-card">
        <div class="metric-icon">‚ö°</div>
        <h3>–æ—Ç 2 –Ω–µ–¥–µ–ª—å</h3>
        <p>–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏<br><em>–ë—ã—Å—Ç—Ä–∞—è –ª–æ–≥–∏—Å—Ç–∏–∫–∞</em></p>
    </div>
    """, unsafe_allow_html=True)

with col4:
    st.markdown("""
    <div class="luxury-metric-card">
        <div class="metric-icon">üíé</div>
        <h3>–° 2009 –≥–æ–¥–∞</h3>
        <p>–õ–∏–¥–µ—Ä —Ä—ã–Ω–∫–∞<br><em>16 –ª–µ—Ç –±–µ–∑—É–ø—Ä–µ—á–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞</em></p>
    </div>
    """, unsafe_allow_html=True) 