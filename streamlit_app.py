"""
Million Miles AI Sales Assistant - Production Version
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Streamlit Community Cloud
"""

import streamlit as st
import json
import os
from datetime import datetime
import sys
import uuid

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º AI –¥–≤–∏–∂–æ–∫
from ai_engine_improved import ImprovedLuxuryCarAISalesAssistant

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Million Miles AI Sales Assistant",
    page_icon="üöó",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ç–∏–ª–∏ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
st.markdown("""
<style>
    /* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ */
    .stApp {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    }
    
    /* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */
    .main-header {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        padding: 2rem;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        text-align: center;
        margin-bottom: 2rem;
    }
    
    .main-header h1 {
        color: white !important;
        font-size: 2.5rem;
        margin: 0;
        font-family: 'Georgia', serif;
    }
    
    .main-header p {
        color: #f0f0f0 !important;
        font-size: 1.1rem;
        margin-top: 0.5rem;
    }
    
    /* –ö–Ω–æ–ø–∫–∏ */
    .stButton > button {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white !important;
        border-radius: 25px;
        border: none;
        padding: 0.6rem 2rem;
        font-weight: 600;
        transition: all 0.3s;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .stButton > button:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(0,0,0,0.15);
    }
    
    /* –ß–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è */
    .stChatMessage {
        background-color: white !important;
        border-radius: 15px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        margin-bottom: 1rem;
        padding: 1rem !important;
    }
    
    /* –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
    [data-testid="chat-message-user"] {
        background: linear-gradient(135deg, #e0f2fe 0%, #cce7ff 100%) !important;
        margin-left: 15%;
    }
    
    /* –°–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ */
    [data-testid="chat-message-assistant"] {
        background: white !important;
        margin-right: 15%;
        border: 1px solid #e0e0e0;
    }
    
    /* –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ */
    .stChatMessage p, 
    .stChatMessage div,
    .stChatMessage span,
    .stChatMessage * {
        color: #1a1a1a !important;
        line-height: 1.6;
    }
    
    /* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */
    .stChatInput > div {
        border-radius: 25px !important;
        border: 2px solid #e0e0e0 !important;
        background: white !important;
    }
    
    .stChatInput textarea {
        color: #1a1a1a !important;
    }
    
    /* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */
    section[data-testid="stSidebar"] {
        background: linear-gradient(180deg, #1e3c72 0%, #2a5298 100%);
    }
    
    section[data-testid="stSidebar"] .stMarkdown h2,
    section[data-testid="stSidebar"] .stMarkdown p,
    section[data-testid="stSidebar"] label {
        color: white !important;
    }
    
    section[data-testid="stSidebar"] .stTextInput input {
        background: rgba(255,255,255,0.1) !important;
        border: 1px solid rgba(255,255,255,0.3) !important;
        color: white !important;
    }
    
    /* –ú–µ—Ç—Ä–∏–∫–∏ */
    .metric-card {
        background: white;
        padding: 1.5rem;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        text-align: center;
        transition: all 0.3s;
        height: 100%;
    }
    
    .metric-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 20px rgba(0,0,0,0.12);
    }
    
    .metric-card h3 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
    }
    
    .metric-card p {
        color: #555 !important;
        margin: 0;
    }
    
    /* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ */
    hr {
        margin: 2rem 0;
        border: none;
        border-top: 1px solid rgba(0,0,0,0.1);
    }
    
    /* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–ª–æ–∫–∏ */
    .stAlert {
        border-radius: 10px;
        border: none;
    }
    
    /* –°–ø–∏–Ω–Ω–µ—Ä */
    .stSpinner > div {
        color: #667eea !important;
    }
</style>
""", unsafe_allow_html=True)

# --- –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –°–ë–†–û–°–ê –°–ï–°–°–ò–ò ---
def reset_chat_session():
    """–û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π ID —Å–µ—Å—Å–∏–∏."""
    st.session_state.messages = []
    st.session_state.session_id = str(uuid.uuid4())
    welcome_message = """üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Million Miles!
–Ø –í–∏–∫—Ç–æ—Ä–∏—è, –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º. 
–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö, –∏ —è –ø–æ–¥–±–µ—Ä—É –∏–¥–µ–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—Å."""
    st.session_state.messages.append({"role": "assistant", "content": welcome_message})

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if 'messages' not in st.session_state:
    reset_chat_session()

if 'selected_client' not in st.session_state:
    st.session_state.selected_client = "–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç"
if 'session_id' not in st.session_state:
    st.session_state.session_id = str(uuid.uuid4())

# –°–æ–∑–¥–∞–Ω–∏–µ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –ø–æ–ª—É—á–µ–Ω–∏–µ–º API –∫–ª—é—á–∞
@st.cache_resource
def get_assistant():
    """–°–æ–∑–¥–∞–Ω–∏–µ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º API –∫–ª—é—á–æ–º"""
    # –ë–ï–ó–û–ü–ê–°–ù–û–ï –ø–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–∞ –∏–∑ Streamlit secrets
    try:
        api_key = st.secrets["GEMINI_API_KEY"]
        os.environ["GEMINI_API_KEY"] = api_key
    except KeyError:
        st.error("‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        st.stop()
    
    return ImprovedLuxuryCarAISalesAssistant(ai_provider="gemini")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
st.markdown("""
<div class="main-header">
    <h1>üöó Million Miles</h1>
    <p>–≠–ª–∏—Ç–Ω—ã–π –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –ø–æ –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º</p>
</div>
""", unsafe_allow_html=True)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.markdown("<h2 style='color: white; text-align: center;'>üë§ –ö–ª–∏–µ–Ω—Ç</h2>", unsafe_allow_html=True)
    st.markdown("---")
    
    assistant = get_assistant()
    client_names = [client["name"] for client in assistant.crm_data.get("clients", [])]
    client_names.insert(0, "–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç")
    
    st.markdown("<p style='color: white; font-weight: bold;'>üìã –ë–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤</p>", unsafe_allow_html=True)
    selected_name = st.selectbox(
        "–í—ã–±–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã",
        client_names,
        index=client_names.index(st.session_state.selected_client),
        on_change=reset_chat_session,
        label_visibility="collapsed"
    )
    
    st.session_state.selected_client = selected_name

    if selected_name != "–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç":
        client = assistant.find_client_by_name(selected_name)
        if client:
            st.info(f"üí∞ –ë—é–¥–∂–µ—Ç: {client.budget_min:,} - {client.budget_max:,} ‚ÇΩ")
            st.info(f"üìä –°—Ç–∞—Ç—É—Å: {client.deal_status}")
    
    if st.button("üóëÔ∏è –ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥", use_container_width=True, on_click=reset_chat_session):
        st.rerun()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
if prompt := st.chat_input("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."):
    st.session_state.messages.append({"role": "user", "content": prompt})
    
    with st.chat_message("user"):
        st.markdown(prompt)
    
    with st.chat_message("assistant"):
        with st.spinner("–î—É–º–∞—é..."):
            assistant = get_assistant()
            response = assistant.generate_response(
                prompt, 
                st.session_state.selected_client,
                chat_history=st.session_state.messages
            )
            st.markdown(response)
    
    st.session_state.messages.append({"role": "assistant", "content": response})

# –§—É—Ç–µ—Ä —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
st.markdown("---")
col1, col2, col3, col4 = st.columns(4)

with col1:
    st.markdown("""
    <div class="metric-card">
        <h3>üèÜ</h3>
        <p><strong>15+ –±—Ä–µ–Ω–¥–æ–≤</strong><br>–ü—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å–∞</p>
    </div>
    """, unsafe_allow_html=True)

with col2:
    st.markdown("""
    <div class="metric-card">
        <h3>üë•</h3>
        <p><strong>10 000+</strong><br>–°—á–∞—Å—Ç–ª–∏–≤—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤</p>
    </div>
    """, unsafe_allow_html=True)

with col3:
    st.markdown("""
    <div class="metric-card">
        <h3>üìÖ</h3>
        <p><strong>–° 2009 –≥–æ–¥–∞</strong><br>–õ–∏–¥–µ—Ä —Ä—ã–Ω–∫–∞</p>
    </div>
    """, unsafe_allow_html=True)

with col4:
    st.markdown("""
    <div class="metric-card">
        <h3>üíé</h3>
        <p><strong>VIP —Å–µ—Ä–≤–∏—Å</strong><br>24/7 –∫–æ–Ω—Å—å–µ—Ä–∂</p>
    </div>
    """, unsafe_allow_html=True) 